// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
    "github.com/go-kratos/kratos/v2"
    "github.com/go-kratos/kratos/v2/log"
    "go-like/app/article/service/internal/biz"
    "go-like/app/article/service/internal/conf"
    "go-like/app/article/service/internal/data"
    "go-like/app/article/service/internal/server"
    "go-like/app/article/service/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, confData *conf.Data, registry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
    dataData, cleanup, err := data.NewData(confData, logger)
    if err != nil {
        return nil, nil, err
    }
    articleRepo := data.NewArticleRepo(dataData)
    articleUseCase := biz.NewArticleUseCase(articleRepo, logger)
    articleService := service.NewArticleService(logger, articleUseCase)
    grpcServer := server.NewGRPCServer(confServer, logger, articleService)
    registrar := server.NewRegistrar(registry)
    app := newApp(logger, grpcServer, registrar)
    return app, func() {
        cleanup()
    }, nil
}
